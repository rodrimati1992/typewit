error[E0277]: `NoDerives<NoImpls>` doesn't implement `Debug`
  --> tests/misc_tests/type_eq_ui_tests/stw_derive_unimplemented-err.rs:47:24
   |
47 |     assert_all_impld::<NoDerives<NoImpls>>();
   |                        ^^^^^^^^^^^^^^^^^^ `NoDerives<NoImpls>` cannot be formatted using `{:?}`
   |
   = help: the trait `Debug` is not implemented for `NoDerives<NoImpls>`
   = note: add `#[derive(Debug)]` to `NoDerives<NoImpls>` or manually `impl Debug for NoDerives<NoImpls>`
note: required by a bound in `assert_all_impld`
  --> tests/misc_tests/type_eq_ui_tests/stw_derive_unimplemented-err.rs:9:8
   |
7  | fn assert_all_impld<T>()
   |    ---------------- required by a bound in this function
8  | where
9  |     T: Debug + Copy + Clone + PartialEq + Eq + PartialOrd + Ord + Hash
   |        ^^^^^ required by this bound in `assert_all_impld`
help: consider annotating `NoDerives<NoImpls>` with `#[derive(Debug)]`
  --> src/macros/simple_type_witness_macro.rs
   |
   +         #[derive(Debug)]
   |         $vis enum $enum <$($generics)* __Wit: ?Sized>
   |

error[E0277]: the trait bound `NoDerives<NoImpls>: Ord` is not satisfied
  --> tests/misc_tests/type_eq_ui_tests/stw_derive_unimplemented-err.rs:47:24
   |
47 |     assert_all_impld::<NoDerives<NoImpls>>();
   |                        ^^^^^^^^^^^^^^^^^^ the trait `Ord` is not implemented for `NoDerives<NoImpls>`
   |
note: required by a bound in `assert_all_impld`
  --> tests/misc_tests/type_eq_ui_tests/stw_derive_unimplemented-err.rs:9:61
   |
7  | fn assert_all_impld<T>()
   |    ---------------- required by a bound in this function
8  | where
9  |     T: Debug + Copy + Clone + PartialEq + Eq + PartialOrd + Ord + Hash
   |                                                             ^^^ required by this bound in `assert_all_impld`
help: consider annotating `NoDerives<NoImpls>` with `#[derive(Ord)]`
  --> src/macros/simple_type_witness_macro.rs
   |
   +         #[derive(Ord)]
   |         $vis enum $enum <$($generics)* __Wit: ?Sized>
   |

error[E0277]: the trait bound `NoDerives<NoImpls>: Hash` is not satisfied
  --> tests/misc_tests/type_eq_ui_tests/stw_derive_unimplemented-err.rs:47:24
   |
47 |     assert_all_impld::<NoDerives<NoImpls>>();
   |                        ^^^^^^^^^^^^^^^^^^ the trait `Hash` is not implemented for `NoDerives<NoImpls>`
   |
note: required by a bound in `assert_all_impld`
  --> tests/misc_tests/type_eq_ui_tests/stw_derive_unimplemented-err.rs:9:67
   |
7  | fn assert_all_impld<T>()
   |    ---------------- required by a bound in this function
8  | where
9  |     T: Debug + Copy + Clone + PartialEq + Eq + PartialOrd + Ord + Hash
   |                                                                   ^^^^ required by this bound in `assert_all_impld`
help: consider annotating `NoDerives<NoImpls>` with `#[derive(Hash)]`
  --> src/macros/simple_type_witness_macro.rs
   |
   +         #[derive(Hash)]
   |         $vis enum $enum <$($generics)* __Wit: ?Sized>
   |

error[E0277]: the trait bound `OnlyPartialEq<NoImpls>: Eq` is not satisfied
  --> tests/misc_tests/type_eq_ui_tests/stw_derive_unimplemented-err.rs:49:24
   |
49 |     assert_cmp_impld::<OnlyPartialEq<NoImpls>>();
   |                        ^^^^^^^^^^^^^^^^^^^^^^ the trait `Eq` is not implemented for `OnlyPartialEq<NoImpls>`
   |
note: required by a bound in `assert_cmp_impld`
  --> tests/misc_tests/type_eq_ui_tests/stw_derive_unimplemented-err.rs:14:20
   |
12 | fn assert_cmp_impld<T>()
   |    ---------------- required by a bound in this function
13 | where
14 |     T: PartialEq + Eq + PartialOrd
   |                    ^^ required by this bound in `assert_cmp_impld`
help: consider annotating `OnlyPartialEq<NoImpls>` with `#[derive(Eq)]`
  --> src/macros/simple_type_witness_macro.rs
   |
   +         #[derive(Eq)]
   |         $vis enum $enum <$($generics)* __Wit: ?Sized>
   |

error[E0277]: can't compare `OnlyPartialEq<NoImpls>` with `OnlyPartialEq<NoImpls>`
  --> tests/misc_tests/type_eq_ui_tests/stw_derive_unimplemented-err.rs:49:24
   |
49 |     assert_cmp_impld::<OnlyPartialEq<NoImpls>>();
   |                        ^^^^^^^^^^^^^^^^^^^^^^ no implementation for `OnlyPartialEq<NoImpls> < OnlyPartialEq<NoImpls>` and `OnlyPartialEq<NoImpls> > OnlyPartialEq<NoImpls>`
   |
   = help: the trait `PartialOrd` is not implemented for `OnlyPartialEq<NoImpls>`
note: required by a bound in `assert_cmp_impld`
  --> tests/misc_tests/type_eq_ui_tests/stw_derive_unimplemented-err.rs:14:25
   |
12 | fn assert_cmp_impld<T>()
   |    ---------------- required by a bound in this function
13 | where
14 |     T: PartialEq + Eq + PartialOrd
   |                         ^^^^^^^^^^ required by this bound in `assert_cmp_impld`
help: consider annotating `OnlyPartialEq<NoImpls>` with `#[derive(PartialOrd)]`
  --> src/macros/simple_type_witness_macro.rs
   |
   +         #[derive(PartialOrd)]
   |         $vis enum $enum <$($generics)* __Wit: ?Sized>
   |

error[E0277]: the trait bound `OnlyPartialEqOrd<NoImpls>: Eq` is not satisfied
  --> tests/misc_tests/type_eq_ui_tests/stw_derive_unimplemented-err.rs:51:24
   |
51 |     assert_cmp_impld::<OnlyPartialEqOrd<NoImpls>>();
   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Eq` is not implemented for `OnlyPartialEqOrd<NoImpls>`
   |
note: required by a bound in `assert_cmp_impld`
  --> tests/misc_tests/type_eq_ui_tests/stw_derive_unimplemented-err.rs:14:20
   |
12 | fn assert_cmp_impld<T>()
   |    ---------------- required by a bound in this function
13 | where
14 |     T: PartialEq + Eq + PartialOrd
   |                    ^^ required by this bound in `assert_cmp_impld`
help: consider annotating `OnlyPartialEqOrd<NoImpls>` with `#[derive(Eq)]`
  --> src/macros/simple_type_witness_macro.rs
   |
   +         #[derive(Eq)]
   |         $vis enum $enum <$($generics)* __Wit: ?Sized>
   |

error[E0277]: `AllCmpTraits<NoImpls>` doesn't implement `Debug`
  --> tests/misc_tests/type_eq_ui_tests/stw_derive_unimplemented-err.rs:55:24
   |
55 |     assert_all_impld::<AllCmpTraits<NoImpls>>();
   |                        ^^^^^^^^^^^^^^^^^^^^^ `AllCmpTraits<NoImpls>` cannot be formatted using `{:?}`
   |
   = help: the trait `Debug` is not implemented for `AllCmpTraits<NoImpls>`
   = note: add `#[derive(Debug)]` to `AllCmpTraits<NoImpls>` or manually `impl Debug for AllCmpTraits<NoImpls>`
note: required by a bound in `assert_all_impld`
  --> tests/misc_tests/type_eq_ui_tests/stw_derive_unimplemented-err.rs:9:8
   |
7  | fn assert_all_impld<T>()
   |    ---------------- required by a bound in this function
8  | where
9  |     T: Debug + Copy + Clone + PartialEq + Eq + PartialOrd + Ord + Hash
   |        ^^^^^ required by this bound in `assert_all_impld`
help: consider annotating `AllCmpTraits<NoImpls>` with `#[derive(Debug)]`
  --> src/macros/simple_type_witness_macro.rs
   |
   +         #[derive(Debug)]
   |         $vis enum $enum <$($generics)* __Wit: ?Sized>
   |

error[E0277]: the trait bound `AllCmpTraits<NoImpls>: Hash` is not satisfied
  --> tests/misc_tests/type_eq_ui_tests/stw_derive_unimplemented-err.rs:55:24
   |
55 |     assert_all_impld::<AllCmpTraits<NoImpls>>();
   |                        ^^^^^^^^^^^^^^^^^^^^^ the trait `Hash` is not implemented for `AllCmpTraits<NoImpls>`
   |
note: required by a bound in `assert_all_impld`
  --> tests/misc_tests/type_eq_ui_tests/stw_derive_unimplemented-err.rs:9:67
   |
7  | fn assert_all_impld<T>()
   |    ---------------- required by a bound in this function
8  | where
9  |     T: Debug + Copy + Clone + PartialEq + Eq + PartialOrd + Ord + Hash
   |                                                                   ^^^^ required by this bound in `assert_all_impld`
help: consider annotating `AllCmpTraits<NoImpls>` with `#[derive(Hash)]`
  --> src/macros/simple_type_witness_macro.rs
   |
   +         #[derive(Hash)]
   |         $vis enum $enum <$($generics)* __Wit: ?Sized>
   |

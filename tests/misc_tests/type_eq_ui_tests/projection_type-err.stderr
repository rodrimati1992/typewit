error[E0308]: mismatched types
 --> tests/misc_tests/type_eq_ui_tests/projection_type-err.rs:5:5
  |
4 | fn flipper<L, R>(te: TypeEq<L, R>) -> TypeEq<L, R> {
  |            -  - found type parameter  ------------ expected `TypeEq<L, R>` because of return type
  |            |
  |            expected type parameter
5 |     te.flip()
  |     ^^^^^^^^^ expected `TypeEq<L, R>`, found `TypeEq<R, L>`
  |
  = note: expected struct `TypeEq<L, R>`
             found struct `TypeEq<R, L>`
  = note: a type parameter was expected, but a different one was found; you might be missing a type parameter or trait bound
  = note: for more information, visit https://doc.rust-lang.org/book/ch10-02-traits.html#traits-as-parameters
help: try removing the method call
  |
5 -     te.flip()
5 +     te
  |

error[E0308]: mismatched types
 --> tests/misc_tests/type_eq_ui_tests/projection_type-err.rs:9:16
  |
8 | fn joiner_a<A, B, C>(first: TypeEq<A, B>, second: TypeEq<B, C>) -> TypeEq<A, B> {
  |                -  - found type parameter
  |                |
  |                expected type parameter
9 |     first.join(second)
  |           ---- ^^^^^^ expected `TypeEq<B, B>`, found `TypeEq<B, C>`
  |           |
  |           arguments to this method are incorrect
  |
  = note: expected struct `TypeEq<_, B>`
             found struct `TypeEq<_, C>`
  = note: a type parameter was expected, but a different one was found; you might be missing a type parameter or trait bound
  = note: for more information, visit https://doc.rust-lang.org/book/ch10-02-traits.html#traits-as-parameters
note: method defined here
 --> src/type_eq.rs
  |
  |         pub const fn join<O: ?Sized>(self: TypeEq<L, R>, _other: TypeEq<R, O>) -> TypeEq<L, O> {
  |                      ^^^^

error[E0308]: mismatched types
  --> tests/misc_tests/type_eq_ui_tests/projection_type-err.rs:13:24
   |
12 | fn joiner_b<A, B, C>(first: TypeEq<A, B>, second: TypeEq<C, B>) {
   |                -  - found type parameter
   |                |
   |                expected type parameter
13 |     let _ = first.join(second);
   |                   ---- ^^^^^^ expected `TypeEq<B, _>`, found `TypeEq<C, B>`
   |                   |
   |                   arguments to this method are incorrect
   |
   = note: expected struct `TypeEq<B, _>`
              found struct `TypeEq<C, B>`
   = note: a type parameter was expected, but a different one was found; you might be missing a type parameter or trait bound
   = note: for more information, visit https://doc.rust-lang.org/book/ch10-02-traits.html#traits-as-parameters
note: method defined here
  --> src/type_eq.rs
   |
   |         pub const fn join<O: ?Sized>(self: TypeEq<L, R>, _other: TypeEq<R, O>) -> TypeEq<L, O> {
   |                      ^^^^

error[E0308]: mismatched types
  --> tests/misc_tests/type_eq_ui_tests/projection_type-err.rs:17:5
   |
16 | fn in_ref_to_different_type<L, R>(te: TypeEq<L, R>) -> TypeEq<&'static u8, &'static u16> {
   |                             - this type parameter      --------------------------------- expected `TypeEq<&'static u8, &'static u16>` because of return type
17 |     te.in_ref()
   |     ^^^^^^^^^^^ expected `TypeEq<&u8, &u16>`, found `TypeEq<&L, &R>`
   |
   = note: expected struct `TypeEq<&'static u8, &'static u16>`
              found struct `TypeEq<&L, &R>`

error[E0308]: mismatched types
  --> tests/misc_tests/type_eq_ui_tests/projection_type-err.rs:21:5
   |
20 | fn in_mut_to_different_type<'a, L, R>(te: TypeEq<L, R>) -> TypeEq<&'a mut u8, &'a mut u16> {
   |                                 - this type parameter      ------------------------------- expected `TypeEq<&'a mut u8, &'a mut u16>` because of return type
21 |     te.in_mut()
   |     ^^^^^^^^^^^ expected `TypeEq<&mut u8, &mut u16>`, found `TypeEq<&mut L, &mut R>`
   |
   = note: expected struct `TypeEq<&'a mut u8, &'a mut u16>`
              found struct `TypeEq<&mut L, &mut R>`

error[E0308]: mismatched types
  --> tests/misc_tests/type_eq_ui_tests/projection_type-err.rs:25:5
   |
24 | fn map_to_different_type<'a, L, R>(te: TypeEq<L, R>) -> TypeEq<u8, u16> {
   |                                                         --------------- expected `TypeEq<u8, u16>` because of return type
25 |     te.map(Mapper)
   |     ^^^^^^^^^^^^^^ expected `TypeEq<u8, u16>`, found `TypeEq<[L; 1], [R; 1]>`
   |
   = note: expected struct `TypeEq<u8, u16>`
              found struct `TypeEq<[L; 1], [R; 1]>`

error[E0308]: mismatched types
  --> tests/misc_tests/type_eq_ui_tests/projection_type-err.rs:28:5
   |
27 | fn project_to_different_type<'a, L, R>(te: TypeEq<L, R>) -> TypeEq<u8, u16> {
   |                                                             --------------- expected `TypeEq<u8, u16>` because of return type
28 |     te.project::<Mapper>()
   |     ^^^^^^^^^^^^^^^^^^^^^^ expected `TypeEq<u8, u16>`, found `TypeEq<[L; 1], [R; 1]>`
   |
   = note: expected struct `TypeEq<u8, u16>`
              found struct `TypeEq<[L; 1], [R; 1]>`

error[E0271]: type mismatch resolving `<[u32; 2] as IntoIterator>::Item == &str`
  --> tests/misc_tests/type_ne_ui_tests/type_ne_mapping-err.rs:63:20
   |
63 |     (ne.map_to_arg(IiFn), ne.project_to_arg::<IiFn, _, _>())
   |         ---------- ^^^^ expected `&str`, found `u32`
   |         |
   |         required by a bound introduced by this call
   |
note: required by a bound in `typewit::type_ne_::<impl TypeNe<L, R>>::map_to_arg`
  --> src/./type_ne/extra_type_ne_methods.rs
   |
   |     pub const fn map_to_arg<F, LA, RA>(self: TypeNe<L, R>, func: F) -> TypeNe<LA, RA>
   |                  ---------- required by a bound in this associated function
   |     where
   |         InvokeAlias<F>: crate::TypeFn<LA, Output = L> + crate::TypeFn<RA, Output = R>
   |                                           ^^^^^^^^^^ required by this bound in `typewit::type_ne_::<impl TypeNe<L, R>>::map_to_arg`

error[E0271]: type mismatch resolving `<Result<char, i8> as IntoIterator>::Item == ()`
  --> tests/misc_tests/type_ne_ui_tests/type_ne_mapping-err.rs:63:20
   |
63 |     (ne.map_to_arg(IiFn), ne.project_to_arg::<IiFn, _, _>())
   |         ---------- ^^^^ expected `()`, found `char`
   |         |
   |         required by a bound introduced by this call
   |
note: required by a bound in `typewit::type_ne_::<impl TypeNe<L, R>>::map_to_arg`
  --> src/./type_ne/extra_type_ne_methods.rs
   |
   |     pub const fn map_to_arg<F, LA, RA>(self: TypeNe<L, R>, func: F) -> TypeNe<LA, RA>
   |                  ---------- required by a bound in this associated function
   |     where
   |         InvokeAlias<F>: crate::TypeFn<LA, Output = L> + crate::TypeFn<RA, Output = R>
   |                                                                           ^^^^^^^^^^ required by this bound in `typewit::type_ne_::<impl TypeNe<L, R>>::map_to_arg`

error[E0271]: type mismatch resolving `<[u32; 2] as IntoIterator>::Item == &str`
  --> tests/misc_tests/type_ne_ui_tests/type_ne_mapping-err.rs:63:47
   |
63 |     (ne.map_to_arg(IiFn), ne.project_to_arg::<IiFn, _, _>())
   |                                               ^^^^ expected `&str`, found `u32`
   |
note: required by a bound in `typewit::type_ne_::<impl TypeNe<L, R>>::project_to_arg`
  --> src/./type_ne/extra_type_ne_methods.rs
   |
   |     pub const fn project_to_arg<F, LA, RA>(self: TypeNe<L, R>) -> TypeNe<LA, RA>
   |                  -------------- required by a bound in this associated function
   |     where
   |         InvokeAlias<F>: crate::TypeFn<LA, Output = L> + crate::TypeFn<RA, Output = R>
   |                                           ^^^^^^^^^^ required by this bound in `typewit::type_ne_::<impl TypeNe<L, R>>::project_to_arg`

error[E0271]: type mismatch resolving `<Result<char, i8> as IntoIterator>::Item == ()`
  --> tests/misc_tests/type_ne_ui_tests/type_ne_mapping-err.rs:63:47
   |
63 |     (ne.map_to_arg(IiFn), ne.project_to_arg::<IiFn, _, _>())
   |                                               ^^^^ expected `()`, found `char`
   |
note: required by a bound in `typewit::type_ne_::<impl TypeNe<L, R>>::project_to_arg`
  --> src/./type_ne/extra_type_ne_methods.rs
   |
   |     pub const fn project_to_arg<F, LA, RA>(self: TypeNe<L, R>) -> TypeNe<LA, RA>
   |                  -------------- required by a bound in this associated function
   |     where
   |         InvokeAlias<F>: crate::TypeFn<LA, Output = L> + crate::TypeFn<RA, Output = R>
   |                                                                           ^^^^^^^^^^ required by this bound in `typewit::type_ne_::<impl TypeNe<L, R>>::project_to_arg`

error: lifetime may not live long enough
  --> tests/misc_tests/type_ne_ui_tests/type_ne_mapping-err.rs:35:5
   |
34 | fn lifetime1_mismatch<'a>(ne: TypeNe<&'a str, ()>) -> Pair<TypeNe<Vec<&'static str>, Option<()>>> {
   |                       -- lifetime `'a` defined here
35 |     (ne.map_to_arg(IiFn), ne.project_to_arg::<IiFn, _, _>())
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ returning this value requires that `'a` must outlive `'static`
   |
   = note: requirement occurs because of the type `TypeNe<Vec<&str>, Option<()>>`, which makes the generic argument `Vec<&str>` invariant
   = note: the struct `TypeNe<L, R>` is invariant over the parameter `L`
   = help: see <https://doc.rust-lang.org/nomicon/subtyping.html> for more information about variance

error: lifetime may not live long enough
  --> tests/misc_tests/type_ne_ui_tests/type_ne_mapping-err.rs:41:5
   |
38 | fn lifetime2_mismatch<'b>(
   |                       -- lifetime `'b` defined here
...
41 |     ne.map_to_arg(LifetimesFoo(PD))
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ returning this value requires that `'b` must outlive `'static`
   |
   = note: requirement occurs because of the type `TypeNe<&u16, &u32>`, which makes the generic argument `&u16` invariant
   = note: the struct `TypeNe<L, R>` is invariant over the parameter `L`
   = help: see <https://doc.rust-lang.org/nomicon/subtyping.html> for more information about variance

error: lifetime may not live long enough
  --> tests/misc_tests/type_ne_ui_tests/type_ne_mapping-err.rs:59:5
   |
56 | fn lifetime3_rev_mismatch<'b>(
   |                           -- lifetime `'b` defined here
...
59 |     ne.map_to_arg(LifetimesBar(PD))
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ returning this value requires that `'b` must outlive `'static`
   |
   = note: requirement occurs because of the type `TypeNe<&u16, &u32>`, which makes the generic argument `&u16` invariant
   = note: the struct `TypeNe<L, R>` is invariant over the parameter `L`
   = help: see <https://doc.rust-lang.org/nomicon/subtyping.html> for more information about variance

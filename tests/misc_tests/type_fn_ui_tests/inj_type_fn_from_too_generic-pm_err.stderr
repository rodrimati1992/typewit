error[E0207]: the const parameter `N` is not constrained by the impl trait, self type, or predicates
 --> tests/misc_tests/type_fn_ui_tests/./inj_type_fn_from_too_generic-err.rs
  |
  | / typewit::inj_type_fn!{
  | |     struct FromTooGenericA;
  | |
  | |     impl<T, const N: usize> [T; N] => T;
  | | }
  | |_^ unconstrained const parameter
  |
  = note: expressions using a const parameter must map each value to a distinct output value
  = note: proving the result of expressions other than the parameter are unique is not supported
  = note: this error originates in the macro `$crate::__::__parse_in_generics` which comes from the expansion of the macro `typewit::inj_type_fn` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0207]: the type parameter `U` is not constrained by the impl trait, self type, or predicates
 --> tests/misc_tests/type_fn_ui_tests/./inj_type_fn_from_too_generic-err.rs
  |
  |     impl<T, U> (T, U) => T;
  |             ^ unconstrained type parameter

error[E0207]: the type parameter `I` is not constrained by the impl trait, self type, or predicates
 --> tests/misc_tests/type_fn_ui_tests/./inj_type_fn_from_too_generic-err.rs
  |
  |     impl<I: IntoIterator> I => <I as IntoIterator>::Item;
  |          ^ unconstrained type parameter

error[E0284]: type annotations needed
 --> tests/misc_tests/type_fn_ui_tests/./inj_type_fn_from_too_generic-err.rs
  |
  | / typewit::inj_type_fn!{
  | |     struct FromTooGenericA;
  | |
  | |     impl<T, const N: usize> [T; N] => T;
  | | }
  | |_^ cannot infer the value of const parameter `N`
  |
note: required for `FromTooGenericA` to implement `RevTypeFn<T>`
 --> tests/misc_tests/type_fn_ui_tests/./inj_type_fn_from_too_generic-err.rs
  |
  | / typewit::inj_type_fn!{
  | |     struct FromTooGenericA;
  | |
  | |     impl<T, const N: usize> [T; N] => T;
  | | }
  | |_^ unsatisfied trait bound introduced here
  = note: required for `FromTooGenericA` to implement `InjTypeFn<[T; N]>`
  = note: this error originates in the macro `$crate::__tyfn_injtypefn_impl` which comes from the expansion of the macro `typewit::inj_type_fn` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0282]: type annotations needed
 --> tests/misc_tests/type_fn_ui_tests/./inj_type_fn_from_too_generic-err.rs
  |
  | / typewit::inj_type_fn!{
  | |     struct FromTooGenericB;
  | |
  | |     impl<T, U> (T, U) => T;
  | | }
  | |_^ cannot infer type
  |
  = note: this error originates in the macro `$crate::__tyfn_injtypefn_impl` which comes from the expansion of the macro `typewit::inj_type_fn` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0283]: type annotations needed
 --> tests/misc_tests/type_fn_ui_tests/./inj_type_fn_from_too_generic-err.rs
  |
  | / typewit::inj_type_fn!{
  | |     struct IntoIteratorFn;
  | |
  | |     impl<I: IntoIterator> I => <I as IntoIterator>::Item;
  | | }
  | |_^ cannot infer type
  |
  = note: cannot satisfy `_: IntoIterator`
note: required for `IntoIteratorFn` to implement `RevTypeFn<<I as IntoIterator>::Item>`
 --> tests/misc_tests/type_fn_ui_tests/./inj_type_fn_from_too_generic-err.rs
  |
  | / typewit::inj_type_fn!{
  | |     struct IntoIteratorFn;
  | |
  | |     impl<I: IntoIterator> I => <I as IntoIterator>::Item;
  | |             ------------ unsatisfied trait bound introduced here
  | | }
  | |_^
  = note: required for `IntoIteratorFn` to implement `InjTypeFn<I>`
  = note: this error originates in the macro `$crate::__tyfn_injtypefn_impl` which comes from the expansion of the macro `typewit::inj_type_fn` (in Nightly builds, run with -Z macro-backtrace for more info)

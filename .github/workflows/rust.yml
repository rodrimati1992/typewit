name: Rust

on:
    push:
        branches:
        - main

    pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      max-parallel: 2
      matrix:
        rust: [stable, beta, nightly, 1.57.0]

    steps:
    - uses: actions/checkout@v2
    - name: ci-all-versions
      run: |
        set -ex
        rustup override set ${{ matrix.rust }}
        cargo update

        cd "${{github.workspace}}/"
        cargo test --no-default-features 
        cargo test --no-default-features --features "alloc"

    - uses: actions/checkout@v2
    - name: ci-nighly
      if: ${{ matrix.rust == 'nightly' && runner.os == 'Linux' }}
      run: |
        set -ex
        rustup override set ${{ matrix.rust }}

        cargo update -Z minimal-versions
        
        cd "${{github.workspace}}/"
        cargo build
        
        cargo test --no-default-features 
        cargo test --no-default-features --features "alloc"
        cargo test --no-default-features --features "nightly_mut_refs"
        cargo test --no-default-features --features "alloc nightly_mut_refs"

        MIRI_NIGHTLY=nightly-$(curl -s https://rust-lang.github.io/rustup-components-history/x86_64-unknown-linux-gnu/miri)
        echo "Installing latest nightly with Miri"
        echo "$MIRI_NIGHTLY"
        rustup set profile minimal
        rustup default "$MIRI_NIGHTLY"
        rustup override set "$MIRI_NIGHTLY"
        rustup component add miri
        cargo miri setup

        cargo clean 

        env RUST_BACKTRACE=0 MIRIFLAGS="-Zmiri-disable-isolation " \
            cargo miri test --no-default-features --features "alloc nightly_mut_refs"
